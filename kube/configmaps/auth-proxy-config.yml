---
apiVersion: v1
kind: ConfigMap
metadata:
  name: auth-proxy-config
data:
  authenticate.lua: |-
    local auth_module = { }
    function auth_module.authenticate_user()
      local opts = {
        discovery = os.getenv("DISCOVERY_URL") .. "/.well-known/openid-configuration",
        client_id = os.getenv("CLIENT_ID"),
        client_secret = os.getenv("CLIENT_SECRET"),
        redirect_uri = os.getenv("REDIRECT_URL"),
        token_endpoint_auth_method = os.getenv("CLIENT_AUTH_METHOD"),
        logout_path = os.getenv("LOGOUT_PATH"),
        revoke_tokens_on_logout = os.getenv("REVOKE_TOKENS_ON_LOGOUT"),
        post_logout_redirect_uri = ngx.var.scheme .. "://" .. ngx.var.http_host,
        renew_access_token_on_expiry = os.getenv("SILENT_TOKEN_RENEWAL"),
        scope = os.getenv("SCOPES"):gsub(", ", " "):gsub(",", " "),
        lifecycle = {
          -- set cookie on login
          on_authenticated = function (session)
            ngx.header['Set-Cookie'] = "kc-access=" .. session.data.access_token .. "; Path=/; Secure=true;"
          end,
          -- remove cookie on logout
          on_logout = function (session)
            ngx.header['Set-Cookie'] = "kc-access=; Path=/; Secure=true; Expires=Thu, 01 Jan 1970 00:00:01 GMT;"
          end
        }
      }

      -- authenticate user using OIDC auth flow
      local res, err = require("resty.openidc").authenticate(opts)

      if err then
        ngx.log(ngx.ERR, "There was an error while a user attempted to log in: " .. tostring(err))

        ngx.header.content_type = 'text/html';
        ngx.status = 500
        ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)
      end

      ngx.log(ngx.DEBUG, res.user.name .. " has successfully authenticated")
      return res
    end
  # please note that there are a few other functions that are built into the image, but they have been removed here as they are not relevant to this example
  # depending on your use they may be needed, so please check the authenticate.lua file in the repository to check what functions are built in
